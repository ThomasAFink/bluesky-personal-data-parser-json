[
  {
    "$type": "app.bsky.feed.post",
    "createdAt": "2023-11-23T21:07:59.920Z",
    "facets": [
      {
        "features": [
          {
            "$type": "app.bsky.richtext.facet#link",
            "uri": "https://github.com/TrafficGCN"
          }
        ],
        "index": {
          "byteEnd": 26,
          "byteStart": 5
        }
      }
    ],
    "langs": [
      "en"
    ],
    "text": "ðŸš˜ github.com/TrafficGCN"
  },
  {
    "$type": "app.bsky.feed.post",
    "createdAt": "2023-11-26T13:09:53.916Z",
    "embed": {
      "$type": "app.bsky.embed.external",
      "external": {
        "description": "Alright so you have a list of geocoordinates (for example maybe street sensors) and you want to create an adjacency matrix to feed intoâ€¦",
        "thumb": {
          "$type": "blob",
          "mimeType": "image/jpeg",
          "ref": {
            "Number": 42,
            "Content": "AAFVEiBN5mI1Mviaeii/29qbE7l2AKsTuHMAmafjknCplOCArA=="
          },
          "size": 484237
        },
        "title": "Creating an Adjacency Matrix Using the Dijkstra Algorithm for Graph Convolutional Networks GCNs",
        "uri": "https://medium.com/@TrafficGCN/creating-an-adjacency-matrix-using-the-dijkstra-algorithm-for-graph-convolutional-networks-gcns-6540a3ee4f3c"
      }
    },
    "facets": [
      {
        "features": [
          {
            "$type": "app.bsky.richtext.facet#tag",
            "tag": "DataScience"
          }
        ],
        "index": {
          "byteEnd": 108,
          "byteStart": 96
        }
      },
      {
        "features": [
          {
            "$type": "app.bsky.richtext.facet#tag",
            "tag": "Python"
          }
        ],
        "index": {
          "byteEnd": 116,
          "byteStart": 109
        }
      },
      {
        "features": [
          {
            "$type": "app.bsky.richtext.facet#link",
            "uri": "https://medium.com/@TrafficGCN/creating-an-adjacency-matrix-using-the-dijkstra-algorithm-for-graph-convolutional-networks-gcns-6540a3ee4f3c"
          }
        ],
        "index": {
          "byteEnd": 143,
          "byteStart": 117
        }
      }
    ],
    "langs": [
      "en"
    ],
    "text": "Creating an Adjacency Matrix Using the Dijkstra Algorithm for Graph Convolutional Networks GCNs #DataScience #Python\nmedium.com/@TrafficGCN/..."
  },
  {
    "$type": "app.bsky.feed.post",
    "createdAt": "2023-11-26T13:10:48.231Z",
    "embed": {
      "$type": "app.bsky.embed.external",
      "external": {
        "description": "Introduction",
        "thumb": {
          "$type": "blob",
          "mimeType": "image/jpeg",
          "ref": {
            "Number": 42,
            "Content": "AAFVEiD5aqm16D08nF5EkpCOZsa+hb72zFvCMoKcdQwKlBKDSw=="
          },
          "size": 673893
        },
        "title": "Haversine Mapping for Spatial Integration in Graph Convolutional Networks",
        "uri": "https://medium.com/@TrafficGCN/haversine-mapping-for-spatial-integration-in-graph-convolutional-networks-954b76e5f321"
      }
    },
    "facets": [
      {
        "features": [
          {
            "$type": "app.bsky.richtext.facet#tag",
            "tag": "DataScience"
          }
        ],
        "index": {
          "byteEnd": 86,
          "byteStart": 74
        }
      },
      {
        "features": [
          {
            "$type": "app.bsky.richtext.facet#tag",
            "tag": "Python"
          }
        ],
        "index": {
          "byteEnd": 94,
          "byteStart": 87
        }
      },
      {
        "features": [
          {
            "$type": "app.bsky.richtext.facet#link",
            "uri": "https://medium.com/@TrafficGCN/haversine-mapping-for-spatial-integration-in-graph-convolutional-networks-954b76e5f321"
          }
        ],
        "index": {
          "byteEnd": 121,
          "byteStart": 95
        }
      }
    ],
    "langs": [
      "en"
    ],
    "text": "Haversine Mapping for Spatial Integration in Graph Convolutional Networks #DataScience #Python\nmedium.com/@TrafficGCN/..."
  }
]